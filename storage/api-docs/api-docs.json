{
    "openapi": "3.0.0",
    "info": {
        "title": "Meeting_Chat API",
        "description": "Application for free communication",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Application for free communication"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds a new user - with oneOf examples",
                "description": "Adds a new user",
                "operationId": "loginUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "schema": "LoginUser",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "12345@gmail.com",
                                    "password": "12jhb345THjj678"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ResponseOk_LoginUser",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjk5NDM0NjI3LCJleHAiOjE2OTk0MzgyMjcsIm5iZiI6MTY5OTQzNDYyNywianRpIjoiaHNzeHVDZmJTUUd3QU85eCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.V7B_I7bCT57x1kOV_1u9eQxscWAwAqW3Ae9oRvY62LM",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "oneOf": [
                                                {
                                                    "schema": "ErrorsPasswordAndEmail",
                                                    "properties": {
                                                        "password": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "schema": "ErrorsPassword",
                                                    "properties": {
                                                        "password": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "schema": "ErrorsEmail",
                                                    "properties": {
                                                        "email": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "The password field is required.",
                                        "errors": {
                                            "password": [
                                                "The password field is required."
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds a new user",
                "description": "Adds a new user",
                "operationId": "registerUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "schema": "CreateUser",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "BlaBlaBlaName",
                                    "email": "12345@gmail.com",
                                    "password": "12jhb345THjj678",
                                    "password_confirmation": "12jhb345THjj678"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "data": {
                                            "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjk5NDM0NjI3LCJleHAiOjE2OTk0MzgyMjcsIm5iZiI6MTY5OTQzNDYyNywianRpIjoiaHNzeHVDZmJTUUd3QU85eCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.V7B_I7bCT57x1kOV_1u9eQxscWAwAqW3Ae9oRvY62LM",
                                            "token_type": "bearer",
                                            "expires_in": 3600
                                        },
                                        "message": "You have been sent a confirmation email!"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "The name field is required. (and 2 more errors)",
                                        "errors": {
                                            "name": [
                                                "The name field is required."
                                            ],
                                            "email": [
                                                "The email field is required."
                                            ],
                                            "password": [
                                                "The password field is required."
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds a new user - with oneOf examples",
                "description": "Adds a new user",
                "operationId": "addUser",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A list of things.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "email_verified": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "updated_at": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "allOf": [
                                                {
                                                    "properties": {
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "firstPageUrl": {
                                                            "type": "string"
                                                        },
                                                        "lastPageUrl": {
                                                            "type": "string"
                                                        },
                                                        "nextPageUrl": {
                                                            "type": "string"
                                                        },
                                                        "prevPageUrl": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "allOf": [
                                                {
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer"
                                                        },
                                                        "from": {
                                                            "type": "integer"
                                                        },
                                                        "lastPage": {
                                                            "type": "integer"
                                                        },
                                                        "perPage": {
                                                            "type": "integer"
                                                        },
                                                        "to": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "count": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "data": [
                                            {
                                                "id": 1,
                                                "name": "Prof. Rene Keeling Sr.",
                                                "email_verified": false,
                                                "created_at": "2023-11-06T15:34:03.000000Z",
                                                "updated_at": "2023-11-06T15:34:03.000000Z"
                                            },
                                            {
                                                "id": 2,
                                                "name": "Hyman Harvey",
                                                "email_verified": false,
                                                "created_at": "2023-11-06T15:34:03.000000Z",
                                                "updated_at": "2023-11-06T15:34:03.000000Z"
                                            }
                                        ],
                                        "links": {
                                            "path": "http://localhost:8000/api/user",
                                            "firstPageUrl": "http://localhost:8000/api/user?page=1",
                                            "lastPageUrl": "http://localhost:8000/api/user?page=2",
                                            "nextPageUrl": "http://localhost:8000/api/user?page=2",
                                            "prevPageUrl": null
                                        },
                                        "meta": {
                                            "currentPage": 1,
                                            "from": 1,
                                            "lastPage": 2,
                                            "perPage": 10,
                                            "to": 10,
                                            "total": 13,
                                            "count": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User logout",
                "description": "User logout",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Successfully logged out"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/refresh": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Token reset",
                "description": "Token reset",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ResponseOk_LoginUser",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjk5NDM0NjI3LCJleHAiOjE2OTk0MzgyMjcsIm5iZiI6MTY5OTQzNDYyNywianRpIjoiaHNzeHVDZmJTUUd3QU85eCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.V7B_I7bCT57x1kOV_1u9eQxscWAwAqW3Ae9oRvY62LM",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/me": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show current user",
                "description": "Show current user",
                "operationId": "MeUser",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email_verified": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "id": 1,
                                        "name": "Prof. Rene Keeling Sr.",
                                        "email_verified": false,
                                        "created_at": "2023-11-06T15:34:03.000000Z",
                                        "updated_at": "2023-11-06T15:34:03.000000Z"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show user",
                "description": "Show user",
                "operationId": "ShowUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter with mutliple examples",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "An int value.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email_verified": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "id": 1,
                                        "name": "Prof. Rene Keeling Sr.",
                                        "email_verified": false,
                                        "created_at": "2023-11-06T15:34:03.000000Z",
                                        "updated_at": "2023-11-06T15:34:03.000000Z"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Update user",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter with mutliple examples",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "An int value.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "BlaBlaBlaName",
                                    "email": "12345@gmail.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email_verified": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "id": 1,
                                        "name": "Prof. Rene Keeling Sr.",
                                        "email_verified": false,
                                        "created_at": "2023-11-06T15:34:03.000000Z",
                                        "updated_at": "2023-11-06T15:34:03.000000Z"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "No query results for model [App\\Models\\User] 20."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Destroy user",
                "description": "SDestroy user",
                "operationId": "DestroyUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter with mutliple examples",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "An int value.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email_verified": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "id": 1,
                                        "name": "Prof. Rene Keeling Sr.",
                                        "email_verified": false,
                                        "created_at": "2023-11-06T15:34:03.000000Z",
                                        "updated_at": "2023-11-06T15:34:03.000000Z"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "Unauthenticated."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "message": "No query results for model [App\\Models\\User] 20."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Endpoints for users"
        }
    ]
}